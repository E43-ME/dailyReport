// Generated by CoffeeScript 1.6.1
(function() {
  var AdminGroupViewModel, init;

  AdminGroupViewModel = function() {
    var self;
    self = this;
    self.departments = ko.observableArray([]);
    self.selectedDepartment = ko.observable(null);
    self.users = ko.observableArray([]);
    self.selectedUser = ko.observable(null);
    self.valid = ko.computed(function() {
      return (self.selectedDepartment() != null) && self.selectedUser();
    });
    self.submit = function() {
      return console.log(self.selectedUser());
    };
    return self;
  };

  init = function() {
    var adminvm, getUsersByDepartmentId;
    adminvm = new AdminGroupViewModel();
    ko.applyBindings(adminvm);
    DepartmemtModel.getAllDepartments(function(response) {
      return adminvm.departments(response.data);
    });
    UserModel.getAllUsers(function(response) {
      var users;
      return users = response.data;
    });
    $("#depar").change(function() {
      var departmentId, departmentUsers, users, _ref;
      departmentId = (_ref = adminvm.selectedDepartment()) != null ? _ref['id'] : void 0;
      users = UserModel.getLocalAllUsers();
      departmentUsers = getUsersByDepartmentId(departmentId, users);
      return adminvm.users(departmentUsers);
    });
    return getUsersByDepartmentId = function(departmentId, allUsers) {
      var result, user, _i, _len;
      result = [];
      if (!departmentId) {
        return result;
      }
      for (_i = 0, _len = allUsers.length; _i < _len; _i++) {
        user = allUsers[_i];
        if (departmentId === user["departmentId"]) {
          result.push(user);
        }
      }
      return result;
    };
  };

  init();

}).call(this);
