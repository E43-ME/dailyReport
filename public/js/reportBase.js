// Generated by CoffeeScript 1.6.1
(function() {
  var NUMOFPAGE, ShowReportsViewModel, getReportNum, getReports, gotoPage, reportvm;

  ShowReportsViewModel = function() {
    var self;
    self = this;
    self.reports = ko.observableArray([]);
    self.reportNum = ko.observable(0);
    self.pageNumArray = ko.computed(function() {
      var pageNum, _i, _results;
      pageNum = Math.ceil(self.reportNum() / NUMOFPAGE);
      if (pageNum === 0) {
        pageNum = 1;
      }
      return (function() {
        _results = [];
        for (var _i = 1; 1 <= pageNum ? _i <= pageNum : _i >= pageNum; 1 <= pageNum ? _i++ : _i--){ _results.push(_i); }
        return _results;
      }).apply(this);
    });
    self.currentPage = ko.observable(1);
    return self;
  };

  NUMOFPAGE = 4;

  getReports = function(userId) {
    var data;
    if (userId == null) {
      userId = null;
    }
    data = {
      page: 1,
      numOfPage: NUMOFPAGE,
      userId: userId
    };
    return ReportModel.getReports(data, function(response) {
      return reportvm.reports(response.data);
    });
  };

  getReportNum = function(userId) {
    if (userId == null) {
      userId = null;
    }
    return ReportModel.getReportNum(userId, function(response) {
      return reportvm.reportNum(response.data);
    });
  };

  reportvm = new ShowReportsViewModel();

  ko.applyBindings(reportvm);

  window.getReports = getReports;

  window.getReportNum = getReportNum;

  window.reportvm = reportvm;

  $("div.pagination").on("click", "li a", function() {
    var page;
    page = $(this).text();
    page = parseInt(page);
    gotoPage(page);
    return false;
  });

  gotoPage = function(page) {
    var data;
    reportvm.currentPage(page);
    data = {
      page: page,
      numOfPage: NUMOFPAGE
    };
    return ReportModel.getReports(data, function(response) {
      return reportvm.reports(response.data);
    });
  };

}).call(this);
