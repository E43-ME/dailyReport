// Generated by CoffeeScript 1.6.1
(function() {
  var Response, check, crypto, departmentModel, sanitize, userModel;

  crypto = require('crypto');

  check = require('validator').check;

  sanitize = require('validator').sanitize;

  userModel = require('../models/usersModel');

  departmentModel = require('../models/departmentsModel');

  Response = require('../vo/Response').Response;

  exports.index = function(req, res) {
    return res.render("admin/department");
  };

  exports.usersIndex = function(req, res) {
    return res.render("admin/users");
  };

  exports.createUser = function(req, res) {
    var errorMessage, hashedPassword, password, userName;
    userName = sanitize(req.body.userName).trim();
    password = sanitize(req.body.password).trim();
    errorMessage = "";
    try {
      check(userName, "字符长度为6-25，不能含有:符号").len(6, 25).notContains(":");
    } catch (error) {
      errorMessage = error.message;
    }
    try {
      check(password, "字符长度为7-25，不能含有:符号").len(7, 25).notContains(":");
    } catch (error) {
      errorMessage = "" + errorMessage + ", " + error.message;
    }
    if (errorMessage === "") {
      hashedPassword = crypto.createHash("sha1").update(password).digest('hex');
      return userModel.createUser(userName, hashedPassword, function(response) {
        return res.send(response);
      });
    } else {
      return res.send(new Response(0, errorMessage));
    }
  };

  exports.createDepartment = function(req, res) {
    var departmentName, errorMessage, parentId;
    departmentName = sanitize(req.body.departmentName).trim();
    parentId = sanitize(req.body.pid).trim();
    errorMessage = "";
    try {
      check(departmentName, "部门名称不能为空").notEmpty().notContains(":");
      return departmentModel.createDepartment(departmentName, parentId, function(response) {
        return res.send(response);
      });
    } catch (error) {
      errorMessage = error.message;
      console.log(errorMessage);
      return res.send(new Response(0, errorMessage));
    }
  };

  exports.getAllDepartments = function(req, res) {
    return departmentModel.getAllDepartments(function(response) {
      return res.send(response);
    });
  };

}).call(this);
