// Generated by CoffeeScript 1.6.1
(function() {
  var Response, check, crypto, sanitize, userModel;

  crypto = require('crypto');

  sanitize = require('validator').sanitize;

  check = require('validator').check;

  userModel = require('../models/usersModel');

  Response = require('../vo/Response').Response;

  exports.loginIndex = function(req, res) {
    return res.render("login");
  };

  exports.login = function(req, res) {
    var password, username;
    username = req.body.userName;
    password = req.body.password;
    return res.redirect('/admin');
  };

  exports.createUser = function(req, res) {
    var departmentId, errorMessage, hashedPassword, password, superiorId, userName;
    userName = sanitize(req.body.userName).trim();
    password = sanitize(req.body.password).trim();
    departmentId = req.body.departmentId;
    superiorId = req.body.superiorId;
    errorMessage = "";
    try {
      check(userName, "字符长度为6-25，不能含有:符号").len(6, 25).notContains(":");
    } catch (error) {
      errorMessage = error.message;
    }
    try {
      check(password, "字符长度为7-25，不能含有:符号").len(7, 25).notContains(":");
    } catch (error) {
      errorMessage = "" + errorMessage + ", " + error.message;
    }
    if (errorMessage === "") {
      hashedPassword = crypto.createHash("sha1").update(password).digest('hex');
      return userModel.createUser(userName, hashedPassword, departmentId, superiorId, function(response) {
        return res.send(response);
      });
    } else {
      return res.send(new Response(0, errorMessage));
    }
  };

  exports.removeUser = function(req, res) {
    var userId;
    userId = sanitize(req.body.userId).trim();
    return userModel.removeUser(userId, function(response) {
      return res.send(response);
    });
  };

  exports.getAllUsers = function(req, res) {
    return userModel.getAllUsers(function(response) {
      return res.send(response);
    });
  };

}).call(this);
